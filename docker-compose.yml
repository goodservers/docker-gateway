version: '2'

volumes:
  dg-nginx-config: {}
  dg-nginx-public: {}

services:
  nginx:
    restart: always
    image: fholzer/nginx-brotli:v1.14.0
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - dg-nginx-config:/etc/nginx/conf.d
      - dg-nginx-public:/usr/share/nginx/html
      - ./log/:/var/log/nginx/
      - ./settings/certs:/etc/nginx/certs:ro
      - ./settings/vhost.d:/etc/nginx/vhost.d
  nginx-gen:
    restart: always
    image: jwilder/docker-gen:0.7.3
    container_name: nginx-gen
    depends_on:
      - nginx
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./settings/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    volumes_from:
      - nginx
    entrypoint: /bin/sh -c
    command: ["/usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf"]
  nginx-letsencrypt:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.8.1
    container_name: nginx-letsencrypt
    depends_on:
      - nginx
      - nginx-gen
    environment:
      NGINX_PROXY_CONTAINER: nginx
      NGINX_DOCKER_GEN_CONTAINER: nginx-gen
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./settings/certs:/etc/nginx/certs:rw
  health-checker:
    restart: always
    image: goodservers/docker-doctor:0.2.0
    container_name: docker-doctor
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

networks:
  default:
    external:
      name: nginx-proxy
